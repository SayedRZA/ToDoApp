{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\MoodTracker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './QuoteGenerator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quotes = [\"The only way to do great work is to love what you do. – Steve Jobs\", \"Life is what happens when you're busy making other plans. – John Lennon\", \"Get busy living or get busy dying. – Stephen King\", \"You have within you right now, everything you need to deal with whatever the world can throw at you. – Brian Tracy\", \"Believe you can and you're halfway there. – Theodore Roosevelt\", \"The best time to plant a tree was twenty years ago. The second best time is now. – Chinese Proverb\"];\nconst QuoteGenerator = () => {\n  _s();\n  const [quote, setQuote] = useState('');\n  const generateQuote = () => {\n    const randomIndex = Math.floor(Math.random() * quotes.length);\n    setQuote(quotes[randomIndex]);\n  };\n  useEffect(() => {\n    generateQuote(); // Generate a quote on initial render\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quote-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Random Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"quote\",\n      children: quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate-button\",\n      onClick: generateQuote,\n      children: \"Get Another Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(QuoteGenerator, \"+0fjIodrFDijtLyRDbc2ItdycKA=\");\n_c = QuoteGenerator;\nexport default QuoteGenerator;\nvar _c;\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","quotes","QuoteGenerator","_s","quote","setQuote","generateQuote","randomIndex","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/MoodTracker.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './QuoteGenerator.css';\r\n\r\nconst quotes = [\r\n    \"The only way to do great work is to love what you do. – Steve Jobs\",\r\n    \"Life is what happens when you're busy making other plans. – John Lennon\",\r\n    \"Get busy living or get busy dying. – Stephen King\",\r\n    \"You have within you right now, everything you need to deal with whatever the world can throw at you. – Brian Tracy\",\r\n    \"Believe you can and you're halfway there. – Theodore Roosevelt\",\r\n    \"The best time to plant a tree was twenty years ago. The second best time is now. – Chinese Proverb\"\r\n];\r\n\r\nconst QuoteGenerator = () => {\r\n    const [quote, setQuote] = useState('');\r\n\r\n    const generateQuote = () => {\r\n        const randomIndex = Math.floor(Math.random() * quotes.length);\r\n        setQuote(quotes[randomIndex]);\r\n    };\r\n\r\n    useEffect(() => {\r\n        generateQuote(); // Generate a quote on initial render\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"quote-generator\">\r\n            <h3>Random Quote</h3>\r\n            <p className=\"quote\">{quote}</p>\r\n            <button className=\"generate-button\" onClick={generateQuote}>\r\n                Get Another Quote\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteGenerator;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAG,CACX,oEAAoE,EACpE,yEAAyE,EACzE,mDAAmD,EACnD,oHAAoH,EACpH,gEAAgE,EAChE,oGAAoG,CACvG;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,aAAa,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,MAAM,CAACU,MAAM,CAAC;IAC7DN,QAAQ,CAACJ,MAAM,CAACM,WAAW,CAAC,CAAC;EACjC,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZQ,aAAa,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBjB,OAAA;MAAGY,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAET;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCjB,OAAA;MAAQY,SAAS,EAAC,iBAAiB;MAACM,OAAO,EAAEZ,aAAc;MAAAO,QAAA,EAAC;IAE5D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACd,EAAA,CArBID,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}