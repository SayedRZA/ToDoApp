{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\DoughnutChart.jsx\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, Tooltip, Legend, ArcElement, Title, Filler } from 'chart.js';\nimport './DoughnutChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Tooltip, Legend, ArcElement, Title, Filler);\nconst DoughnutChart = ({\n  completedTasks,\n  tasks\n}) => {\n  // Calculate the number of completed and uncompleted tasks\n  const completedCount = completedTasks.length;\n  const uncompletedCount = tasks.length - completedCount; // Update this line to reflect actual uncompleted count\n\n  // Chart data\n  const data = {\n    labels: [],\n    // Remove labels from the data\n    datasets: [{\n      data: [completedCount, uncompletedCount],\n      backgroundColor: ['#36A2EB', '#FF6384'],\n      hoverBackgroundColor: ['#36A2EB', '#FF6384']\n    }]\n  };\n\n  // Chart options\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false // Hide legend\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            const value = tooltipItem.raw || 0;\n            return `${value}`; // Show only the value in the tooltip\n          }\n        }\n      }\n    }\n  };\n\n  // Custom plugin to add the count on the chart\n  const plugins = [{\n    id: 'doughnut_labels',\n    beforeDraw(chart) {\n      const {\n        ctx,\n        data\n      } = chart;\n      ctx.save();\n      const completed = data.datasets[0].data[0];\n      const uncompleted = data.datasets[0].data[1];\n\n      // Draw the combined text above the doughnut\n      ctx.font = 'bold 16px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = '#000';\n      const centerX = chart.width / 2;\n      const centerY = chart.height / 2;\n      const offset = -20; // Adjust this value to change vertical position\n\n      // Draw combined tasks text without labels\n      ctx.fillText(`Tasks: ${completed + uncompleted}`, centerX, centerY + offset); // Show total tasks\n\n      ctx.restore();\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doughnut-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      options: options,\n      plugins: plugins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","Doughnut","Chart","ChartJS","Tooltip","Legend","ArcElement","Title","Filler","jsxDEV","_jsxDEV","register","DoughnutChart","completedTasks","tasks","completedCount","length","uncompletedCount","data","labels","datasets","backgroundColor","hoverBackgroundColor","options","maintainAspectRatio","responsive","plugins","legend","display","tooltip","callbacks","label","tooltipItem","value","raw","id","beforeDraw","chart","ctx","save","completed","uncompleted","font","textAlign","textBaseline","fillStyle","centerX","width","centerY","height","offset","fillText","restore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/DoughnutChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, Tooltip, Legend, ArcElement, Title, Filler } from 'chart.js';\r\nimport './DoughnutChart.css'; \r\nChartJS.register(Tooltip, Legend, ArcElement, Title, Filler);\r\n\r\nconst DoughnutChart = ({ completedTasks, tasks }) => {\r\n  // Calculate the number of completed and uncompleted tasks\r\n  const completedCount = completedTasks.length;\r\n  const uncompletedCount = tasks.length - completedCount; // Update this line to reflect actual uncompleted count\r\n\r\n  // Chart data\r\n  const data = {\r\n      labels: [], // Remove labels from the data\r\n      datasets: [\r\n          {\r\n              data: [completedCount, uncompletedCount],\r\n              backgroundColor: ['#36A2EB', '#FF6384'],\r\n              hoverBackgroundColor: ['#36A2EB', '#FF6384'],\r\n          },\r\n      ],\r\n  };\r\n\r\n  // Chart options\r\n  const options = {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      plugins: {\r\n          legend: {\r\n              display: false, // Hide legend\r\n          },\r\n          tooltip: {\r\n              callbacks: {\r\n                  label: (tooltipItem) => {\r\n                      const value = tooltipItem.raw || 0;\r\n                      return `${value}`; // Show only the value in the tooltip\r\n                  },\r\n              },\r\n          },\r\n      },\r\n  };\r\n\r\n  // Custom plugin to add the count on the chart\r\n  const plugins = [\r\n      {\r\n          id: 'doughnut_labels',\r\n          beforeDraw(chart) {\r\n              const { ctx, data } = chart;\r\n              ctx.save();\r\n\r\n              const completed = data.datasets[0].data[0];\r\n              const uncompleted = data.datasets[0].data[1];\r\n\r\n              // Draw the combined text above the doughnut\r\n              ctx.font = 'bold 16px Arial';\r\n              ctx.textAlign = 'center';\r\n              ctx.textBaseline = 'middle';\r\n              ctx.fillStyle = '#000';\r\n\r\n              const centerX = chart.width / 2;\r\n              const centerY = chart.height / 2;\r\n              const offset = -20; // Adjust this value to change vertical position\r\n\r\n              // Draw combined tasks text without labels\r\n              ctx.fillText(`Tasks: ${completed + uncompleted}`, centerX, centerY + offset); // Show total tasks\r\n\r\n              ctx.restore();\r\n          },\r\n      },\r\n  ];\r\n\r\n  return (\r\n      <div className=\"doughnut-chart-container\">\r\n          <Doughnut data={data} options={options} plugins={plugins} />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default DoughnutChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}