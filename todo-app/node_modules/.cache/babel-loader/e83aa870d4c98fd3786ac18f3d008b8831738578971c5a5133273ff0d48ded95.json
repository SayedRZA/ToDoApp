{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\CicrcularProgress.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CircularProgress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircularProgress = ({\n  totalTasks,\n  completedTasks\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const percentage = completedTasks / totalTasks * 100;\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"circular-progress-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle\",\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          background: `conic-gradient(#4caf50 ${percentage}%, #e0e0e0 ${percentage}%)`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${completedTasks}/${totalTasks}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Progress Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have completed \", completedTasks, \" out of \", totalTasks, \" tasks.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOpen,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(CircularProgress, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = CircularProgress;\nexport default CircularProgress;\nvar _c;\n$RefreshReg$(_c, \"CircularProgress\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CircularProgress","totalTasks","completedTasks","_s","isOpen","setIsOpen","percentage","handleOpen","className","children","onClick","style","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/CicrcularProgress.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CircularProgress.css';\r\n\r\nconst CircularProgress = ({ totalTasks, completedTasks }) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const percentage = (completedTasks / totalTasks) * 100;\r\n\r\n    const handleOpen = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"circular-progress-widget\">\r\n            <div className=\"circle\" onClick={handleOpen}>\r\n                <div className=\"progress\" style={{ background: `conic-gradient(#4caf50 ${percentage}%, #e0e0e0 ${percentage}%)` }}>\r\n                    <span>{`${completedTasks}/${totalTasks}`}</span>\r\n                </div>\r\n            </div>\r\n            {isOpen && (\r\n                <div className=\"progress-details\">\r\n                    <h3>Progress Details</h3>\r\n                    <p>You have completed {completedTasks} out of {totalTasks} tasks.</p>\r\n                    <button onClick={handleOpen}>Close</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CircularProgress;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMS,UAAU,GAAIJ,cAAc,GAAGD,UAAU,GAAI,GAAG;EAEtD,MAAMM,UAAU,GAAGA,CAAA,KAAM;IACrBF,SAAS,CAAC,CAACD,MAAM,CAAC;EACtB,CAAC;EAED,oBACIL,OAAA;IAAKS,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACrCV,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAACE,OAAO,EAAEH,UAAW;MAAAE,QAAA,eACxCV,OAAA;QAAKS,SAAS,EAAC,UAAU;QAACG,KAAK,EAAE;UAAEC,UAAU,EAAE,0BAA0BN,UAAU,cAAcA,UAAU;QAAK,CAAE;QAAAG,QAAA,eAC9GV,OAAA;UAAAU,QAAA,EAAO,GAAGP,cAAc,IAAID,UAAU;QAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACLZ,MAAM,iBACHL,OAAA;MAAKS,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7BV,OAAA;QAAAU,QAAA,EAAI;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBjB,OAAA;QAAAU,QAAA,GAAG,qBAAmB,EAACP,cAAc,EAAC,UAAQ,EAACD,UAAU,EAAC,SAAO;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrEjB,OAAA;QAAQW,OAAO,EAAEH,UAAW;QAAAE,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACb,EAAA,CAzBIH,gBAAgB;AAAAiB,EAAA,GAAhBjB,gBAAgB;AA2BtB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}