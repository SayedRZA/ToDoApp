{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\MoodTracker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MoodTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodTracker = () => {\n  _s();\n  const [mood, setMood] = useState('');\n  const [note, setNote] = useState('');\n  const [moodHistory, setMoodHistory] = useState([]);\n  const handleMoodSelect = selectedMood => {\n    setMood(selectedMood);\n    setMoodHistory([...moodHistory, {\n      mood: selectedMood,\n      note,\n      date: new Date().toLocaleDateString()\n    }]);\n    setNote(''); // Clear note after saving mood\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mood Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji-container\",\n      children: ['😊', '😐', '😢', '😡', '😌'].map(emoji => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"emoji\",\n        onClick: () => handleMoodSelect(emoji),\n        children: emoji\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"How do you feel today?\",\n      value: note,\n      onChange: e => setNote(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mood History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: moodHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            color: entry.mood === '😊' ? 'green' : entry.mood === '😢' ? 'blue' : 'red'\n          },\n          children: [entry.date, \": \", entry.mood, \" - \", entry.note]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(MoodTracker, \"bcsk2/pGOSrKWvjQ17GJNzhh/cI=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MoodTracker","_s","mood","setMood","note","setNote","moodHistory","setMoodHistory","handleMoodSelect","selectedMood","date","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","emoji","onClick","placeholder","value","onChange","e","target","entry","index","style","color","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/MoodTracker.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MoodTracker.css';\r\n\r\nconst MoodTracker = () => {\r\n    const [mood, setMood] = useState('');\r\n    const [note, setNote] = useState('');\r\n    const [moodHistory, setMoodHistory] = useState([]);\r\n\r\n    const handleMoodSelect = (selectedMood) => {\r\n        setMood(selectedMood);\r\n        setMoodHistory([...moodHistory, { mood: selectedMood, note, date: new Date().toLocaleDateString() }]);\r\n        setNote(''); // Clear note after saving mood\r\n    };\r\n\r\n    return (\r\n        <div className=\"mood-tracker\">\r\n            <h2>Mood Tracker</h2>\r\n            <div className=\"emoji-container\">\r\n                {['😊', '😐', '😢', '😡', '😌'].map((emoji) => (\r\n                    <span key={emoji} className=\"emoji\" onClick={() => handleMoodSelect(emoji)}>\r\n                        {emoji}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n            <textarea\r\n                placeholder=\"How do you feel today?\"\r\n                value={note}\r\n                onChange={(e) => setNote(e.target.value)}\r\n            />\r\n            <div className=\"mood-history\">\r\n                <h3>Mood History</h3>\r\n                <ul>\r\n                    {moodHistory.map((entry, index) => (\r\n                        <li key={index} style={{ color: entry.mood === '😊' ? 'green' : entry.mood === '😢' ? 'blue' : 'red' }}>\r\n                            {entry.date}: {entry.mood} - {entry.note}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoodTracker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,gBAAgB,GAAIC,YAAY,IAAK;IACvCN,OAAO,CAACM,YAAY,CAAC;IACrBF,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;MAAEJ,IAAI,EAAEO,YAAY;MAAEL,IAAI;MAAEM,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAAE,CAAC,CAAC,CAAC;IACrGP,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACIN,OAAA;IAAKc,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3B,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACK,GAAG,CAAEC,KAAK,iBACtCrB,OAAA;QAAkBc,SAAS,EAAC,OAAO;QAACQ,OAAO,EAAEA,CAAA,KAAMb,gBAAgB,CAACY,KAAK,CAAE;QAAAN,QAAA,EACtEM;MAAK,GADCA,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNnB,OAAA;MACIuB,WAAW,EAAC,wBAAwB;MACpCC,KAAK,EAAEnB,IAAK;MACZoB,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFnB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBf,OAAA;QAAAe,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBnB,OAAA;QAAAe,QAAA,EACKR,WAAW,CAACa,GAAG,CAAC,CAACQ,KAAK,EAAEC,KAAK,kBAC1B7B,OAAA;UAAgB8B,KAAK,EAAE;YAAEC,KAAK,EAAEH,KAAK,CAACzB,IAAI,KAAK,IAAI,GAAG,OAAO,GAAGyB,KAAK,CAACzB,IAAI,KAAK,IAAI,GAAG,MAAM,GAAG;UAAM,CAAE;UAAAY,QAAA,GAClGa,KAAK,CAACjB,IAAI,EAAC,IAAE,EAACiB,KAAK,CAACzB,IAAI,EAAC,KAAG,EAACyB,KAAK,CAACvB,IAAI;QAAA,GADnCwB,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjB,EAAA,CAtCID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}