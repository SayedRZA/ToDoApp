{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\DoughnutChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport './DoughnutChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoughnutChart = ({\n  tasks,\n  completedTasks\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    const totalCount = tasks.length;\n    const completedCount = completedTasks.length;\n    const remainingCount = totalCount - completedCount;\n    const data = {\n      labels: ['Completed', 'Remaining'],\n      datasets: [{\n        data: [completedCount, remainingCount],\n        backgroundColor: ['#4caf50', '#ff9800'],\n        // Change to your preferred colors\n        hoverBackgroundColor: ['#388e3c', '#f57c00']\n      }]\n    };\n    setChartData(data);\n    setChartOptions({\n      cutout: '60%',\n      // Adjust as needed\n      responsive: true\n    });\n  }, [tasks, completedTasks]); // Dependencies to re-run when tasks or completedTasks change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"doughnut\",\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(DoughnutChart, \"IwROKHPuKnEUHgI07gGP2QYlTYw=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useState","useEffect","Doughnut","jsxDEV","_jsxDEV","DoughnutChart","tasks","completedTasks","_s","chartData","setChartData","chartOptions","setChartOptions","totalCount","length","completedCount","remainingCount","data","labels","datasets","backgroundColor","hoverBackgroundColor","cutout","responsive","className","children","Chart","type","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/DoughnutChart.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport './DoughnutChart.css'; \r\n\r\nconst DoughnutChart = ({ tasks, completedTasks }) => {\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartOptions, setChartOptions] = useState({});\r\n\r\n    useEffect(() => {\r\n        const totalCount = tasks.length;\r\n        const completedCount = completedTasks.length;\r\n        const remainingCount = totalCount - completedCount;\r\n\r\n        const data = {\r\n            labels: ['Completed', 'Remaining'],\r\n            datasets: [\r\n                {\r\n                    data: [completedCount, remainingCount],\r\n                    backgroundColor: ['#4caf50', '#ff9800'], // Change to your preferred colors\r\n                    hoverBackgroundColor: ['#388e3c', '#f57c00']\r\n                }\r\n            ]\r\n        };\r\n\r\n        setChartData(data);\r\n        setChartOptions({\r\n            cutout: '60%', // Adjust as needed\r\n            responsive: true\r\n        });\r\n    }, [tasks, completedTasks]); // Dependencies to re-run when tasks or completedTasks change\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <Chart type=\"doughnut\" data={chartData} options={chartOptions} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAGP,KAAK,CAACQ,MAAM;IAC/B,MAAMC,cAAc,GAAGR,cAAc,CAACO,MAAM;IAC5C,MAAME,cAAc,GAAGH,UAAU,GAAGE,cAAc;IAElD,MAAME,IAAI,GAAG;MACTC,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;MAClCC,QAAQ,EAAE,CACN;QACIF,IAAI,EAAE,CAACF,cAAc,EAAEC,cAAc,CAAC;QACtCI,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;QAAE;QACzCC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS;MAC/C,CAAC;IAET,CAAC;IAEDX,YAAY,CAACO,IAAI,CAAC;IAClBL,eAAe,CAAC;MACZU,MAAM,EAAE,KAAK;MAAE;MACfC,UAAU,EAAE;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,CAACjB,KAAK,EAAEC,cAAc,CAAC,CAAC,CAAC,CAAC;;EAE7B,oBACIH,OAAA;IAAKoB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BrB,OAAA,CAACsB,KAAK;MAACC,IAAI,EAAC,UAAU;MAACV,IAAI,EAAER,SAAU;MAACmB,OAAO,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAACxB,EAAA,CAhCIH,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}