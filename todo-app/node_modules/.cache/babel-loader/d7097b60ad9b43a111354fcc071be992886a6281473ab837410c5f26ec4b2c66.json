{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\DoughnutChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'primereact/chart';\nimport './DoughnutChart.css'; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoughnutChart({\n  totalTasks,\n  completedTasks\n}) {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const data = {\n      labels: ['Completed', 'Remaining'],\n      datasets: [{\n        data: [completedTasks.length, totalTasks.length - completedTasks.length],\n        backgroundColor: [documentStyle.getPropertyValue('--blue-500'), documentStyle.getPropertyValue('--gray-300')],\n        hoverBackgroundColor: [documentStyle.getPropertyValue('--blue-400'), documentStyle.getPropertyValue('--gray-200')]\n      }]\n    };\n    const options = {\n      cutout: '60%',\n      responsive: true,\n      maintainAspectRatio: false // Allow custom dimensions\n    };\n    setChartData(data);\n    setChartOptions(options);\n  }, [completedTasks, totalTasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-widget\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '120px',\n        height: '120px'\n      },\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"doughnut\",\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-display\",\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-footer\",\n      children: [completedTasks.length, \" Completed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), totalTasks.length - completedTasks.length, \" Remaining\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(DoughnutChart, \"IwROKHPuKnEUHgI07gGP2QYlTYw=\");\n_c = DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","DoughnutChart","totalTasks","completedTasks","_s","chartData","setChartData","chartOptions","setChartOptions","documentStyle","getComputedStyle","document","documentElement","data","labels","datasets","length","backgroundColor","getPropertyValue","hoverBackgroundColor","options","cutout","responsive","maintainAspectRatio","className","children","style","width","height","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/DoughnutChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\nimport './DoughnutChart.css'; // Import your CSS file\r\n\r\nexport default function DoughnutChart({ totalTasks, completedTasks }) {\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartOptions, setChartOptions] = useState({});\r\n\r\n    useEffect(() => {\r\n        const documentStyle = getComputedStyle(document.documentElement);\r\n        const data = {\r\n            labels: ['Completed', 'Remaining'],\r\n            datasets: [\r\n                {\r\n                    data: [completedTasks.length, totalTasks.length - completedTasks.length],\r\n                    backgroundColor: [\r\n                        documentStyle.getPropertyValue('--blue-500'), \r\n                        documentStyle.getPropertyValue('--gray-300')\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        documentStyle.getPropertyValue('--blue-400'), \r\n                        documentStyle.getPropertyValue('--gray-200')\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n        const options = {\r\n            cutout: '60%',\r\n            responsive: true,\r\n            maintainAspectRatio: false // Allow custom dimensions\r\n        };\r\n\r\n        setChartData(data);\r\n        setChartOptions(options);\r\n    }, [completedTasks, totalTasks]);\r\n\r\n    return (\r\n        <div className=\"date-widget\">\r\n            <div style={{ width: '120px', height: '120px' }} className=\"chart-container\">\r\n                <Chart type=\"doughnut\" data={chartData} options={chartOptions} />\r\n            </div>\r\n            <div className=\"date-display\">Tasks</div>\r\n            <div className=\"date-footer\">\r\n                {completedTasks.length} Completed\r\n                <br />\r\n                {totalTasks.length - completedTasks.length} Remaining\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,kBAAkB;AACxC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,aAAaA,CAAC;EAAEC,UAAU;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMY,aAAa,GAAGC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC;IAChE,MAAMC,IAAI,GAAG;MACTC,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;MAClCC,QAAQ,EAAE,CACN;QACIF,IAAI,EAAE,CAACV,cAAc,CAACa,MAAM,EAAEd,UAAU,CAACc,MAAM,GAAGb,cAAc,CAACa,MAAM,CAAC;QACxEC,eAAe,EAAE,CACbR,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC,EAC5CT,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC,CAC/C;QACDC,oBAAoB,EAAE,CAClBV,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC,EAC5CT,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC;MAEpD,CAAC;IAET,CAAC;IACD,MAAME,OAAO,GAAG;MACZC,MAAM,EAAE,KAAK;MACbC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK,CAAC;IAC/B,CAAC;IAEDjB,YAAY,CAACO,IAAI,CAAC;IAClBL,eAAe,CAACY,OAAO,CAAC;EAC5B,CAAC,EAAE,CAACjB,cAAc,EAAED,UAAU,CAAC,CAAC;EAEhC,oBACIF,OAAA;IAAKwB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBzB,OAAA;MAAK0B,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAACJ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eACxEzB,OAAA,CAACF,KAAK;QAAC+B,IAAI,EAAC,UAAU;QAAChB,IAAI,EAAER,SAAU;QAACe,OAAO,EAAEb;MAAa;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACNjC,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzCjC,OAAA;MAAKwB,SAAS,EAAC,aAAa;MAAAC,QAAA,GACvBtB,cAAc,CAACa,MAAM,EAAC,YACvB,eAAAhB,OAAA;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACL/B,UAAU,CAACc,MAAM,GAAGb,cAAc,CAACa,MAAM,EAAC,YAC/C;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC7B,EAAA,CA7CuBH,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}