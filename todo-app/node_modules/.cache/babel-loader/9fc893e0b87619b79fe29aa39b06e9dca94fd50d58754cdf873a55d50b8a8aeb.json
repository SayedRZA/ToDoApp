{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\MoodTracker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MoodTracker.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoodTracker = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [mood, setMood] = useState('😊'); // Default mood emoji\n  const [note, setNote] = useState('');\n  const [moodHistory, setMoodHistory] = useState([]);\n  const handleMoodSelect = selectedMood => {\n    setMood(selectedMood);\n    setMoodHistory([...moodHistory, {\n      mood: selectedMood,\n      note,\n      date: new Date().toLocaleDateString()\n    }]);\n    setNote(''); // Clear note after saving mood\n    setIsOpen(false); // Close the selection after choosing a mood\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-display\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mood Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mood-icon\",\n        children: mood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Mood Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), ['😊', '😐', '😢', '😡', '😌'].map(emoji => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"emoji\",\n          onClick: () => handleMoodSelect(emoji),\n          children: emoji\n        }, emoji, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(MoodTracker, \"eOlYXuPqWxQrD41ApybZCzX83Vc=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MoodTracker","_s","isOpen","setIsOpen","mood","setMood","note","setNote","moodHistory","setMoodHistory","handleMoodSelect","selectedMood","date","Date","toLocaleDateString","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","emoji","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/MoodTracker.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MoodTracker.css';\r\n\r\nconst MoodTracker = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [mood, setMood] = useState('😊'); // Default mood emoji\r\n    const [note, setNote] = useState('');\r\n    const [moodHistory, setMoodHistory] = useState([]);\r\n\r\n    const handleMoodSelect = (selectedMood) => {\r\n        setMood(selectedMood);\r\n        setMoodHistory([...moodHistory, { mood: selectedMood, note, date: new Date().toLocaleDateString() }]);\r\n        setNote(''); // Clear note after saving mood\r\n        setIsOpen(false); // Close the selection after choosing a mood\r\n    };\r\n\r\n    return (\r\n        <div className=\"mood-tracker\">\r\n            <div className=\"mood-display\" onClick={() => setIsOpen(!isOpen)}>\r\n                <h2>Mood Today</h2>\r\n                <span className=\"mood-icon\">{mood}</span>\r\n            </div>\r\n            {isOpen && (\r\n                <div className=\"emoji-container\">\r\n                    <span>Mood Today</span>\r\n                    {['😊', '😐', '😢', '😡', '😌'].map((emoji) => (\r\n                        <>\r\n                        <span key={emoji} className=\"emoji\" onClick={() => handleMoodSelect(emoji)}>\r\n                            {emoji}\r\n                        </span>\r\n                        </>\r\n                    ))}\r\n                </div>\r\n            )}\r\n            {/* <div className=\"mood-history\">\r\n                <h3>Mood History</h3>\r\n                <ul>\r\n                    {moodHistory.map((entry, index) => (\r\n                        <li key={index} style={{ color: entry.mood === '😊' ? 'green' : entry.mood === '😢' ? 'blue' : 'red' }}>\r\n                            {entry.date}: {entry.mood} - {entry.note}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoodTracker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMe,gBAAgB,GAAIC,YAAY,IAAK;IACvCN,OAAO,CAACM,YAAY,CAAC;IACrBF,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE;MAAEJ,IAAI,EAAEO,YAAY;MAAEL,IAAI;MAAEM,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAAE,CAAC,CAAC,CAAC;IACrGP,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACbJ,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACIN,OAAA;IAAKkB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACzBnB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAc,QAAA,gBAC5DnB,OAAA;QAAAmB,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBxB,OAAA;QAAMkB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEZ;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACLnB,MAAM,iBACHL,OAAA;MAAKkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BnB,OAAA;QAAAmB,QAAA,EAAM;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACtB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAACC,GAAG,CAAEC,KAAK,iBACtC1B,OAAA,CAAAE,SAAA;QAAAiB,QAAA,eACAnB,OAAA;UAAkBkB,SAAS,EAAC,OAAO;UAACE,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAACa,KAAK,CAAE;UAAAP,QAAA,EACtEO;QAAK,GADCA,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV;MAAC,gBACL,CACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWA,CAAC;AAEd,CAAC;AAACpB,EAAA,CA3CID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}