{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\DoughnutChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'primereact/chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoughnutChartDemo({\n  totalTasks,\n  completedTasks\n}) {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [chartOptions, setChartOptions] = useState({});\n  useEffect(() => {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const data = {\n      labels: ['Completed', 'Remaining'],\n      datasets: [{\n        data: [completedTasks.length, totalTasks.length],\n        backgroundColor: [documentStyle.getPropertyValue('--blue-500'), documentStyle.getPropertyValue('--gray-300')],\n        hoverBackgroundColor: [documentStyle.getPropertyValue('--blue-400'), documentStyle.getPropertyValue('--gray-200')]\n      }]\n    };\n    const options = {\n      cutout: '60%',\n      responsive: true,\n      maintainAspectRatio: false // Allow custom dimensions\n    };\n    setChartData(data);\n    setChartOptions(options);\n  }, [completedTasks, totalTasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '120px',\n      height: '120px'\n    },\n    className: \"card flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"doughnut\",\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(DoughnutChartDemo, \"IwROKHPuKnEUHgI07gGP2QYlTYw=\");\n_c = DoughnutChartDemo;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChartDemo\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","DoughnutChartDemo","totalTasks","completedTasks","_s","chartData","setChartData","chartOptions","setChartOptions","documentStyle","getComputedStyle","document","documentElement","data","labels","datasets","length","backgroundColor","getPropertyValue","hoverBackgroundColor","options","cutout","responsive","maintainAspectRatio","style","width","height","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/DoughnutChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart } from 'primereact/chart';\r\n\r\nexport default function DoughnutChartDemo({ totalTasks, completedTasks }) {\r\n    const [chartData, setChartData] = useState({});\r\n    const [chartOptions, setChartOptions] = useState({});\r\n\r\n    useEffect(() => {\r\n        const documentStyle = getComputedStyle(document.documentElement);\r\n        const data = {\r\n            labels: ['Completed', 'Remaining'],\r\n            datasets: [\r\n                {\r\n                    data: [completedTasks.length, totalTasks.length],\r\n                    backgroundColor: [\r\n                        documentStyle.getPropertyValue('--blue-500'), \r\n                        documentStyle.getPropertyValue('--gray-300')\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        documentStyle.getPropertyValue('--blue-400'), \r\n                        documentStyle.getPropertyValue('--gray-200')\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n        const options = {\r\n            cutout: '60%',\r\n            responsive: true,\r\n            maintainAspectRatio: false // Allow custom dimensions\r\n        };\r\n\r\n        setChartData(data);\r\n        setChartOptions(options);\r\n    }, [completedTasks, totalTasks]);\r\n\r\n    return (\r\n        <div style={{ width: '120px', height: '120px' }} className=\"card flex justify-content-center\">\r\n            <Chart type=\"doughnut\" data={chartData} options={chartOptions} />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,iBAAiBA,CAAC;EAAEC,UAAU;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACtE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMY,aAAa,GAAGC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC;IAChE,MAAMC,IAAI,GAAG;MACTC,MAAM,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC;MAClCC,QAAQ,EAAE,CACN;QACIF,IAAI,EAAE,CAACV,cAAc,CAACa,MAAM,EAAEd,UAAU,CAACc,MAAM,CAAC;QAChDC,eAAe,EAAE,CACbR,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC,EAC5CT,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC,CAC/C;QACDC,oBAAoB,EAAE,CAClBV,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC,EAC5CT,aAAa,CAACS,gBAAgB,CAAC,YAAY,CAAC;MAEpD,CAAC;IAET,CAAC;IACD,MAAME,OAAO,GAAG;MACZC,MAAM,EAAE,KAAK;MACbC,UAAU,EAAE,IAAI;MAChBC,mBAAmB,EAAE,KAAK,CAAC;IAC/B,CAAC;IAEDjB,YAAY,CAACO,IAAI,CAAC;IAClBL,eAAe,CAACY,OAAO,CAAC;EAC5B,CAAC,EAAE,CAACjB,cAAc,EAAED,UAAU,CAAC,CAAC;EAEhC,oBACIF,OAAA;IAAKwB,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAACC,SAAS,EAAC,kCAAkC;IAAAC,QAAA,eACzF5B,OAAA,CAACF,KAAK;MAAC+B,IAAI,EAAC,UAAU;MAAChB,IAAI,EAAER,SAAU;MAACe,OAAO,EAAEb;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd;AAAC7B,EAAA,CArCuBH,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}