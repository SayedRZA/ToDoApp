{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\WeatherWidget.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './WeatherWidget.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeatherWidget = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [city, setCity] = useState('New York'); // Default city\n\n  const fetchWeather = async () => {\n    const apiKey = 'YOUR_API_KEY'; // Replace with your OpenWeatherMap API key\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`);\n    const data = await response.json();\n    if (data.main) {\n      setWeatherData({\n        temperature: Math.round(data.main.temp),\n        city: data.name\n      });\n    }\n  };\n  useEffect(() => {\n    fetchWeather();\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-widget\",\n    children: weatherData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-city\",\n        children: weatherData.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-temp\",\n        children: [weatherData.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(WeatherWidget, \"Je/yAI3s9a0umlqBZ38k2FLUsDM=\");\n_c = WeatherWidget;\nexport default WeatherWidget;\nvar _c;\n$RefreshReg$(_c, \"WeatherWidget\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherWidget","_s","weatherData","setWeatherData","city","setCity","fetchWeather","apiKey","response","fetch","data","json","main","temperature","Math","round","temp","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/WeatherWidget.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './WeatherWidget.css';\r\n\r\nconst WeatherWidget = () => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [city, setCity] = useState('New York'); // Default city\r\n\r\n    const fetchWeather = async () => {\r\n        const apiKey = 'YOUR_API_KEY'; // Replace with your OpenWeatherMap API key\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`);\r\n        const data = await response.json();\r\n        if (data.main) {\r\n            setWeatherData({\r\n                temperature: Math.round(data.main.temp),\r\n                city: data.name,\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchWeather();\r\n    }, [city]);\r\n\r\n    return (\r\n        <div className=\"weather-widget\">\r\n            {weatherData ? (\r\n                <>\r\n                    <div className=\"weather-city\">{weatherData.city}</div>\r\n                    <div className=\"weather-temp\">{weatherData.temperature}Â°C</div>\r\n                </>\r\n            ) : (\r\n                <div className=\"loading\">Loading...</div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherWidget;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;;EAE9C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,MAAM,GAAG,cAAc,CAAC,CAAC;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqDL,IAAI,uBAAuBG,MAAM,EAAE,CAAC;IACtH,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,IAAI,EAAE;MACXT,cAAc,CAAC;QACXU,WAAW,EAAEC,IAAI,CAACC,KAAK,CAACL,IAAI,CAACE,IAAI,CAACI,IAAI,CAAC;QACvCZ,IAAI,EAAEM,IAAI,CAACO;MACf,CAAC,CAAC;IACN;EACJ,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZY,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,oBACIP,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC1BjB,WAAW,gBACRL,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACItB,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEjB,WAAW,CAACE;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtD1B,OAAA;QAAKqB,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAEjB,WAAW,CAACW,WAAW,EAAC,OAAE;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eACjE,CAAC,gBAEH1B,OAAA;MAAKqB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAC3C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CAhCID,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAkCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}