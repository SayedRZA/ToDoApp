{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\DoughnutChart.jsx\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, Tooltip, Legend, ArcElement, Title, Filler } from 'chart.js';\nimport './DoughnutChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Tooltip, Legend, ArcElement, Title, Filler);\nconst DoughnutChart = ({\n  completedTasks,\n  tasks\n}) => {\n  const completedCount = completedTasks.length;\n  const uncompletedCount = tasks.length; // Total tasks minus completed tasks\n\n  // Chart data\n  const data = {\n    labels: ['Completed', 'Uncompleted'],\n    datasets: [{\n      data: [completedCount, uncompletedCount],\n      backgroundColor: ['#36A2EB', '#FF6384'],\n      hoverBackgroundColor: ['#36A2EB', '#FF6384']\n    }]\n  };\n\n  // Chart options\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            const label = tooltipItem.label || '';\n            const value = tooltipItem.raw || 0;\n            return `${label}: ${value}`;\n          }\n        }\n      }\n    }\n  };\n\n  // Custom plugin to add the count on the chart\n  const plugins = [{\n    id: 'doughnut_labels',\n    beforeDraw(chart) {\n      const {\n        ctx,\n        data\n      } = chart;\n      ctx.save();\n      const total = data.datasets[0].data.reduce((a, b) => a + b, 0);\n      const completed = data.datasets[0].data[0];\n      const uncompleted = data.datasets[0].data[1];\n\n      // Draw the text in the middle of the doughnut\n      ctx.font = 'bold 16px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillStyle = '#000';\n      ctx.fillText(`Completed: ${completed}`, chart.width / 2, chart.height / 2 - 10);\n      ctx.fillText(`Uncompleted: ${uncompleted}`, chart.width / 2, chart.height / 2 + 10);\n      ctx.restore();\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '300px',\n      height: '300px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data,\n      options: options,\n      plugins: plugins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","Doughnut","Chart","ChartJS","Tooltip","Legend","ArcElement","Title","Filler","jsxDEV","_jsxDEV","register","DoughnutChart","completedTasks","tasks","completedCount","length","uncompletedCount","data","labels","datasets","backgroundColor","hoverBackgroundColor","options","maintainAspectRatio","responsive","plugins","legend","display","position","tooltip","callbacks","label","tooltipItem","value","raw","id","beforeDraw","chart","ctx","save","total","reduce","a","b","completed","uncompleted","font","textAlign","textBaseline","fillStyle","fillText","width","height","restore","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/DoughnutChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, Tooltip, Legend, ArcElement, Title, Filler } from 'chart.js';\r\nimport './DoughnutChart.css'; \r\nChartJS.register(Tooltip, Legend, ArcElement, Title, Filler);\r\n\r\nconst DoughnutChart = ({ completedTasks, tasks }) => {\r\n     const completedCount = completedTasks.length;\r\n    const uncompletedCount = tasks.length; // Total tasks minus completed tasks\r\n\r\n    // Chart data\r\n    const data = {\r\n        labels: ['Completed', 'Uncompleted'],\r\n        datasets: [\r\n            {\r\n                data: [completedCount, uncompletedCount],\r\n                backgroundColor: ['#36A2EB', '#FF6384'],\r\n                hoverBackgroundColor: ['#36A2EB', '#FF6384'],\r\n            },\r\n        ],\r\n    };\r\n\r\n    // Chart options\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: true,\r\n                position: 'top',\r\n            },\r\n            tooltip: {\r\n                callbacks: {\r\n                    label: (tooltipItem) => {\r\n                        const label = tooltipItem.label || '';\r\n                        const value = tooltipItem.raw || 0;\r\n                        return `${label}: ${value}`;\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    // Custom plugin to add the count on the chart\r\n    const plugins = [\r\n        {\r\n            id: 'doughnut_labels',\r\n            beforeDraw(chart) {\r\n                const { ctx, data } = chart;\r\n                ctx.save();\r\n\r\n                const total = data.datasets[0].data.reduce((a, b) => a + b, 0);\r\n                const completed = data.datasets[0].data[0];\r\n                const uncompleted = data.datasets[0].data[1];\r\n\r\n                // Draw the text in the middle of the doughnut\r\n                ctx.font = 'bold 16px Arial';\r\n                ctx.textAlign = 'center';\r\n                ctx.textBaseline = 'middle';\r\n                ctx.fillStyle = '#000';\r\n                ctx.fillText(`Completed: ${completed}`, chart.width / 2, chart.height / 2 - 10);\r\n                ctx.fillText(`Uncompleted: ${uncompleted}`, chart.width / 2, chart.height / 2 + 10);\r\n\r\n                ctx.restore();\r\n            },\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div style={{ width: '300px', height: '300px' }}>\r\n            <Doughnut data={data} options={options} plugins={plugins} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}