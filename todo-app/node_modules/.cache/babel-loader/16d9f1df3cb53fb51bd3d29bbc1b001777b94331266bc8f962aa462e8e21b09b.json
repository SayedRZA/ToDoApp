{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\DoughnutChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, Tooltip, Legend, ArcElement, Title, Filler } from 'chart.js';\nimport './DoughnutChart.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(Tooltip, Legend, ArcElement, Title, Filler);\nconst DoughnutChart = ({\n  completedTasks,\n  tasks\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); // State to manage chart visibility\n\n  const completedCount = completedTasks.length;\n  const uncompletedCount = tasks.length; // Total tasks minus completed tasks\n\n  // Chart data\n  const data = {\n    labels: ['Completed', 'Uncompleted'],\n    datasets: [{\n      data: [completedCount, uncompletedCount],\n      backgroundColor: ['#4CAF50', '#F44336'],\n      hoverBackgroundColor: ['#45A049', '#E53935']\n    }]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    responsive: true\n  };\n  const toggleChart = () => {\n    setIsOpen(prev => !prev); // Toggle the chart visibility\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"doughnut-chart-container\",\n    onClick: toggleChart,\n    children: [isOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: () => setIsOpen(false),\n        children: \"\\xD7 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), !isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-placeholder\",\n      children: \"Click to Open Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(DoughnutChart, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useState","Doughnut","Chart","ChartJS","Tooltip","Legend","ArcElement","Title","Filler","jsxDEV","_jsxDEV","Fragment","_Fragment","register","DoughnutChart","completedTasks","tasks","_s","isOpen","setIsOpen","completedCount","length","uncompletedCount","data","labels","datasets","backgroundColor","hoverBackgroundColor","options","maintainAspectRatio","responsive","toggleChart","prev","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/DoughnutChart.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, Tooltip, Legend, ArcElement, Title, Filler } from 'chart.js';\r\nimport './DoughnutChart.css';\r\n\r\nChartJS.register(Tooltip, Legend, ArcElement, Title, Filler);\r\n\r\nconst DoughnutChart = ({ completedTasks, tasks }) => {\r\n    const [isOpen, setIsOpen] = useState(false); // State to manage chart visibility\r\n\r\n    const completedCount = completedTasks.length;\r\n    const uncompletedCount = tasks.length; // Total tasks minus completed tasks\r\n\r\n    // Chart data\r\n    const data = {\r\n        labels: ['Completed', 'Uncompleted'],\r\n        datasets: [\r\n            {\r\n                data: [completedCount, uncompletedCount],\r\n                backgroundColor: ['#4CAF50', '#F44336'],\r\n                hoverBackgroundColor: ['#45A049', '#E53935'],\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        maintainAspectRatio: false,\r\n        responsive: true,\r\n    };\r\n\r\n    const toggleChart = () => {\r\n        setIsOpen(prev => !prev); // Toggle the chart visibility\r\n    };\r\n\r\n    return (\r\n        <div className='doughnut-chart-container' onClick={toggleChart}>\r\n            {isOpen && (\r\n                <>\r\n                    <button className=\"close-button\" onClick={() => setIsOpen(false)}>\r\n                        &times; {/* X icon for closing */}\r\n                    </button>\r\n                    <div className=\"chart-wrapper\">\r\n                        <Doughnut data={data} options={options} />\r\n                    </div>\r\n                </>\r\n            )}\r\n            {!isOpen && (\r\n                <div className=\"chart-placeholder\">\r\n                    Click to Open Chart\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoughnutChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,KAAK,IAAIC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,QAAQ,UAAU;AACvF,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7BT,OAAO,CAACU,QAAQ,CAACT,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,CAAC;AAE5D,MAAMM,aAAa,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C,MAAMoB,cAAc,GAAGL,cAAc,CAACM,MAAM;EAC5C,MAAMC,gBAAgB,GAAGN,KAAK,CAACK,MAAM,CAAC,CAAC;;EAEvC;EACA,MAAME,IAAI,GAAG;IACTC,MAAM,EAAE,CAAC,WAAW,EAAE,aAAa,CAAC;IACpCC,QAAQ,EAAE,CACN;MACIF,IAAI,EAAE,CAACH,cAAc,EAAEE,gBAAgB,CAAC;MACxCI,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;MACvCC,oBAAoB,EAAE,CAAC,SAAS,EAAE,SAAS;IAC/C,CAAC;EAET,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,mBAAmB,EAAE,KAAK;IAC1BC,UAAU,EAAE;EAChB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBZ,SAAS,CAACa,IAAI,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAC,0BAA0B;IAACC,OAAO,EAAEH,WAAY;IAAAI,QAAA,GAC1DjB,MAAM,iBACHR,OAAA,CAAAE,SAAA;MAAAuB,QAAA,gBACIzB,OAAA;QAAQuB,SAAS,EAAC,cAAc;QAACC,OAAO,EAAEA,CAAA,KAAMf,SAAS,CAAC,KAAK,CAAE;QAAAgB,QAAA,EAAC;MACtD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACT7B,OAAA;QAAKuB,SAAS,EAAC,eAAe;QAAAE,QAAA,eAC1BzB,OAAA,CAACT,QAAQ;UAACsB,IAAI,EAAEA,IAAK;UAACK,OAAO,EAAEA;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,eACR,CACL,EACA,CAACrB,MAAM,iBACJR,OAAA;MAAKuB,SAAS,EAAC,mBAAmB;MAAAE,QAAA,EAAC;IAEnC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CA9CIH,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}