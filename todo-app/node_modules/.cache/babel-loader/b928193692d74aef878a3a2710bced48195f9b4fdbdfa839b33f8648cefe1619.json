{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EzraHoss\\\\Desktop\\\\ReactGitHubProjects\\\\ToDoApp\\\\ToDoApp\\\\todo-app\\\\src\\\\ToDos\\\\MoodTracker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSmile, faMeh, faSadCry, faAngry, faLaugh } from '@fortawesome/free-solid-svg-icons';\nimport './MoodTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodTracker = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [mood, setMood] = useState(faSmile);\n  const [note, setNote] = useState('');\n  const [moodHistory, setMoodHistory] = useState([]);\n  const handleMoodSelect = selectedMood => {\n    setMood(selectedMood);\n    setMoodHistory([...moodHistory, {\n      mood: selectedMood.iconName,\n      note,\n      date: new Date().toLocaleDateString()\n    }]);\n    setNote('');\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-display\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"daily-mood\",\n        children: \"Mood Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: mood,\n        size: \"2x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"emoji-container\",\n      children: [{\n        icon: faSmile,\n        label: 'Happy'\n      }, {\n        icon: faMeh,\n        label: 'Neutral'\n      }, {\n        icon: faSadCry,\n        label: 'Sad'\n      }, {\n        icon: faAngry,\n        label: 'Angry'\n      }, {\n        icon: faLaugh,\n        label: 'Excited'\n      }].map(({\n        icon,\n        label\n      }) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"emoji\",\n        onClick: () => handleMoodSelect(icon),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: icon,\n          size: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(MoodTracker, \"OF7DCbjgdmpIWxJZ5eem9qOdN1g=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faSmile","faMeh","faSadCry","faAngry","faLaugh","jsxDEV","_jsxDEV","MoodTracker","_s","isOpen","setIsOpen","mood","setMood","note","setNote","moodHistory","setMoodHistory","handleMoodSelect","selectedMood","iconName","date","Date","toLocaleDateString","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","icon","size","label","map","_c","$RefreshReg$"],"sources":["C:/Users/EzraHoss/Desktop/ReactGitHubProjects/ToDoApp/ToDoApp/todo-app/src/ToDos/MoodTracker.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSmile, faMeh, faSadCry, faAngry, faLaugh } from '@fortawesome/free-solid-svg-icons';\r\nimport './MoodTracker.css';\r\n\r\nconst MoodTracker = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [mood, setMood] = useState(faSmile); \r\n    const [note, setNote] = useState('');\r\n    const [moodHistory, setMoodHistory] = useState([]);\r\n\r\n    const handleMoodSelect = (selectedMood) => {\r\n        setMood(selectedMood);\r\n        setMoodHistory([...moodHistory, { mood: selectedMood.iconName, note, date: new Date().toLocaleDateString() }]);\r\n        setNote(''); \r\n        setIsOpen(false); \r\n    };\r\n\r\n    return (\r\n        <div className=\"mood-tracker\">\r\n            <div className=\"mood-display\" onClick={() => setIsOpen(!isOpen)}>\r\n                <span className='daily-mood'>Mood Today</span>\r\n                <FontAwesomeIcon icon={mood} size=\"2x\" />\r\n            </div>\r\n            {isOpen && (\r\n                <div className=\"emoji-container\">    \r\n                    {[\r\n                        { icon: faSmile, label: 'Happy' },\r\n                        { icon: faMeh, label: 'Neutral' },\r\n                        { icon: faSadCry, label: 'Sad' },\r\n                        { icon: faAngry, label: 'Angry' },\r\n                        { icon: faLaugh, label: 'Excited' }\r\n                    ].map(({ icon, label }) => (\r\n                        <span key={label} className=\"emoji\" onClick={() => handleMoodSelect(icon)}>\r\n                            <FontAwesomeIcon icon={icon} size=\"2x\" />\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MoodTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}